{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Y A C I N E\\\\Desktop\\\\Falcon ress\\\\src\\\\Components\\\\navbar.js\";\nimport React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport \"../App.css\";\nexport default class navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = () => {\n      localStorage.removeItem(\"token\");\n    };\n\n    this.state = {\n      show: false\n    };\n    this.handleshow = this.handleshow.bind(this);\n  }\n\n  handleshow() {\n    // toggle your show state\n    // for example if your show state is false than it will be true and if true than it will be false\n    //exclamation mark(!) will work as not operator\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"nav-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/acceuil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"logo\",\n      src: require('../Media/logo-falcon.png'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"applybtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, !this.state.show ? React.createElement(\"button\", {\n      onClick: () => {\n        this.logout();\n        this.handleshow();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"log out\") : null))), \"   \");\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Y A C I N E/Desktop/Falcon ress/src/Components/navbar.js"],"names":["React","Component","Redirect","Link","navbar","constructor","props","logout","localStorage","removeItem","state","show","handleshow","bind","setState","render","require"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,EAAkBC,IAAlB,QAA6B,kBAA7B;AACA,OAAO,YAAP;AACA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBjBC,MAhBiB,GAgBR,MAAM;AACbC,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACD,KAlBgB;;AAGf,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAG;AADI,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AACDD,EAAAA,UAAU,GAAG;AACX;AACA;AACA;AACA,SAAKE,QAAL,CAAc;AAACH,MAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAnB,KAAd;AACD;;AAKCI,EAAAA,MAAM,GAAI;AAIN,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAqB,MAAA,GAAG,EAAEC,OAAO,CAAC,0BAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CADA,EAEF;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe,CAAC,KAAKN,KAAL,CAAWC,IAAZ,GAAkB;AAAQ,MAAA,OAAO,EAAE,MAAM;AAClF,aAAKJ,MAAL;AACQ,aAAKK,UAAL;AACD,OAHoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAlB,GAGb,IAHF,CAA5B,CAFE,CADA,QADF;AAWL;;AAnCyC","sourcesContent":["import React, { Component } from 'react'\r\nimport {Redirect, Link} from 'react-router-dom'\r\nimport \"../App.css\"\r\nexport default class navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n          show : false\r\n            \r\n        }\r\n        this.handleshow = this.handleshow.bind(this);\r\n    }\r\n    handleshow() {\r\n      // toggle your show state\r\n      // for example if your show state is false than it will be true and if true than it will be false\r\n      //exclamation mark(!) will work as not operator\r\n      this.setState({show: !this.state.show});\r\n    }\r\n   \r\n      logout = () => {\r\n        localStorage.removeItem(\"token\");\r\n      };\r\n      render () {\r\n        \r\n         \r\n        \r\n          return (\r\n            <div className=\"nav-container\">\r\n            <nav className=\"navbar\">\r\n            <Link to=\"/acceuil\" ><img className=\"logo\"src={require('../Media/logo-falcon.png')}></img></Link>\r\n          <span className=\"applybtn\" ><Link to=\"/\">{ !this.state.show ?<button onClick={() => {\r\n            this.logout();\r\n                    this.handleshow();\r\n                  }}>log out</button> : null}</Link></span> \r\n            </nav>   </div>\r\n          );\r\n        \r\n    }}"]},"metadata":{},"sourceType":"module"}