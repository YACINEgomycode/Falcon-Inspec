{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Y A C I N E\\\\Desktop\\\\Falcon ress\\\\src\\\\Components\\\\ConnectJWT.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Redirect, Link } from 'react-router-dom';\nexport default class ConnectJWT extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.login = () => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password;\n      axios.post(\"http://localhost:5000/login\", {\n        username,\n        password\n      }).then(res => {\n        console.log(res);\n        localStorage.setItem(\"token\", res.data.token);\n        this.setState;\n      }).catch(err => console.log(err.response.data));\n    };\n\n    this.configtoken = () => {\n      const token = localStorage.getItem(\"token\");\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n\n      if (token) {\n        config.headers[\"Authorization\"] = token;\n      } // const config = { headers: { common: { Authorization: token } } };\n\n\n      return config;\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      toDashboard: false\n    };\n  }\n\n  // componentWillMount(){\n  //   axios\n  //   .get(\"/users\")\n  //   .then(res =>  console.log(res.data))\n  //   .catch(err => console.log(err.response.data));\n  // }\n  componentDidMount() {\n    console.log(this.configtoken());\n    axios.get(\"http://localhost:5000/current\", this.configtoken()).then(res => console.log(res.data)).catch(err => console.log(err.response.data));\n  }\n\n  render() {\n    const token = localStorage.getItem(\"token\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"signup-page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Login Form\"), React.createElement(\"input\", {\n      className: \"form-input\",\n      name: \"username\",\n      placeholder: \"Email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"form-input\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"page-login-btn\",\n      type: \"button\",\n      onClick: this.login,\n      value: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Log In\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Y A C I N E/Desktop/Falcon ress/src/Components/ConnectJWT.js"],"names":["React","Component","axios","Redirect","Link","ConnectJWT","constructor","props","handleChange","e","setState","target","name","value","login","state","username","password","post","then","res","console","log","localStorage","setItem","data","token","catch","err","response","configtoken","getItem","config","headers","toDashboard","componentDidMount","get","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport {Redirect, Link} from 'react-router-dom'\r\n\r\nexport default class ConnectJWT extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             username:\"\",\r\n             password:\"\",\r\n             toDashboard: false,\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      };\r\n\r\n      login = () => {\r\n        const { username, password } = this.state;\r\n        axios\r\n          .post(\"http://localhost:5000/login\", { username, password })\r\n          .then(res => {\r\n            \r\n            console.log(res);\r\n            localStorage.setItem(\"token\", res.data.token);\r\n            this.setState\r\n            \r\n          })\r\n          .catch(err => console.log(err.response.data));\r\n      };\r\n      configtoken = () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\"\r\n          }\r\n        };\r\n        \r\n     \r\n    \r\n        if (token) {\r\n          config.headers[\"Authorization\"] = token;\r\n        }\r\n        // const config = { headers: { common: { Authorization: token } } };\r\n        return config;\r\n      };\r\n\r\n// componentWillMount(){\r\n//   axios\r\n//   .get(\"/users\")\r\n//   .then(res =>  console.log(res.data))\r\n//   .catch(err => console.log(err.response.data));\r\n// }\r\ncomponentDidMount() {\r\n  console.log(this.configtoken());\r\n  axios\r\n    .get(\"http://localhost:5000/current\", this.configtoken())\r\n    .then(res => console.log(res.data))\r\n    .catch(err => console.log(err.response.data));\r\n}\r\n\r\n\r\n\r\n    render() {\r\n      const token = localStorage.getItem(\"token\");\r\n        return (\r\n            <div>\r\n                <div className=\"login\">\r\n        <form method=\"post\">\r\n            <h2 className=\"signup-page-title\">Login Form</h2>\r\n            \r\n            <input className=\"form-input\" name=\"username\" placeholder=\"Email\" onChange={this.handleChange}/>\r\n            <input className=\"form-input\" type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.handleChange} />\r\n          \r\n          \r\n           <button className=\"page-login-btn\" type=\"button\"onClick={this.login} value=\"login\">Log In</button>\r\n           \r\n           </form>\r\n    </div>\r\n                \r\n            </div>\r\n        )\r\n          }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}