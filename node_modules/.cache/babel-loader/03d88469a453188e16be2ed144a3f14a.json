{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Y A C I N E\\\\Desktop\\\\Falcon ress\\\\src\\\\Components\\\\Mission.js\";\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport axios from 'axios';\nimport \"./ordreMission.css\"; // modal class for adding new expert \n\nimport './modal.css';\n\nclass ModalE extends React.Component {\n  // initial state \n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.AddMission = () => {\n      if (this.state.numOrdre === \"\" || this.state.NomPrenom === \"\" || this.state.Qualification === \"\") alert(\"veuillez remplir tout les champs\");else {\n        this.setState({\n          isLoading: true\n        });\n        setTimeout(() => {\n          this.setState(prevState => ({\n            modal: !prevState.modal,\n            isLoading: false\n          }));\n        }, 1200);\n        axios.post(\"/addd\", {\n          // envoyer les données récupérées a la base de données au chemin /addd\n          numOrdre: this.state.numOrdre,\n          NomPrenom: this.state.NomPrenom,\n          Qualification: this.state.Qualification,\n          dateDebut: this.state.dateDebut,\n          dateFin: this.state.dateFin,\n          dureeVisite: this.state.dureeVisite,\n          qualificationExigees: this.state.qualificationExigees,\n          lieuMission: this.state.lieuMission,\n          client: this.state.client,\n          codeclient: this.state.codeclient,\n          etendue: this.state.etendue,\n          materiels: this.state.materiels,\n          lieu: this.state.lieu,\n          mobilisation: this.state.mobilisation,\n          logement: this.state.logement,\n          demobilisation: this.state.demobilisation,\n          isChooseclient: this.state.isChooseclient\n        }).then(res => axios.get(\"/missionsList\") //.then(res => this.props.updateExpertList(res.data))\n        ).catch(err => alert(err));\n      }\n    };\n\n    this.classSelect = e => {\n      var year = new Date().getFullYear();\n      var bb = this.state.Max.length + 1;\n      var options = document.getElementById(\"mySelect\");\n      var id = options[options.selectedIndex].id;\n      this.setState({\n        numOrdre: id + \"-\" + year + \"-\" + bb\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      // variable pour l'animation du button \n      modal: false,\n      numOrdre: \"\",\n      NomPrenom: \"\",\n      Qualification: \"\",\n      dateDebut: \"\",\n      dateFin: \"\",\n      dureeVisite: \"\",\n      qualificationExigees: \"\",\n      lieuMission: \"\",\n      client: \"\",\n      codeclient: \"\",\n      etendue: \"\",\n      materiels: \"\",\n      lieu: \"\",\n      mobilisation: \"\",\n      logement: \"\",\n      demobilisation: \"\",\n      in: 100,\n      Max: [],\n      Min: []\n    };\n    this.toggle = this.toggle.bind(this); // close modal after adding new expert\n  } // toggle get state empty after adding an expert, close modal after add expert \n\n\n  toggle() {\n    // clear state \n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      numOrdre: \"\",\n      NomPrenom: \"\",\n      Qualification: \"\",\n      dateDebut: \"\",\n      dateFin: \"\",\n      dureeVisite: \"\",\n      qualificationExigees: \"\",\n      lieuMission: \"\",\n      client: \"\",\n      codeclient: \"\",\n      etendue: \"\",\n      materiels: \"\",\n      lieu: \"\",\n      mobilisation: \"\",\n      logement: \"\",\n      demobilisation: \"\"\n    }));\n  } // onChange get value from input\n\n\n  componentDidMount() {\n    axios.get('/missionsList').then(res1 => this.setState({\n      Max: res1.data\n    }));\n  }\n\n  getclient() {\n    axios.get('/clients').then(res => this.setState({\n      Min: res.data\n    }));\n  } // componentDidMount (){\n  //     axios.all([\n  //       axios.get('/missionsList'),\n  //       axios.get('/clients')\n  //     ])\n  //     .then(axios.spread((misRes, clRes) => {\n  //       this.setState({\n  //         Max : misRes.data,\n  //         Min: clRes.data // get data from database named FalconData and put all data in variable called profile\n  //     })\n  //     }))\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"homeButton\",\n      onClick: () => {\n        this.toggle();\n        this.getclient();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Cr\\xE9er Ordre de Mission\"), React.createElement(Modal, {\n      size: \"lg\",\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \" Ordre de Mission\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ordreMission\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Ordre de Mission\"), React.createElement(\"label\", {\n      className: \"modalLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Numero d'ordre\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \" \", this.state.numOrdre), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Inspecteur\"), React.createElement(\"label\", {\n      className: \"modalLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Nom et Prenom\"), React.createElement(\"input\", {\n      name: \"NomPrenom\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Qualification\"), React.createElement(\"input\", {\n      name: \"Qualification\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"D\\xE9tails de la mission\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Date Debut\"), React.createElement(\"input\", {\n      name: \"dateDebut\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Date Fin\"), React.createElement(\"input\", {\n      name: \"dateFin\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Dur\\xE9e de la visite\"), React.createElement(\"input\", {\n      name: \"dureeVisite\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Qualifications Exig\\xE9es\"), React.createElement(\"input\", {\n      name: \"qualificationExigees\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"D\\xE9tails du Projet\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Lieu de la mission\"), React.createElement(\"input\", {\n      name: \"lieuMission\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Client\"), React.createElement(\"form\", {\n      name: \"form1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"mySelect\",\n      onChange: this.classSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      hidden: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Choisir un client \"), this.state.Min.map((x, y) => React.createElement(\"option\", {\n      key: y,\n      id: x.clientCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, x.clientName)))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Etendue\"), React.createElement(\"input\", {\n      name: \"etendue\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Logistiques\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Materiels recommand\\xE9s\"), React.createElement(\"input\", {\n      name: \"materiels\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"lieu\"), React.createElement(\"input\", {\n      name: \"lieu\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Mobilisation\"), React.createElement(\"input\", {\n      name: \"mobilisation\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"logement\"), React.createElement(\"input\", {\n      name: \"logement\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"D\\xE9mobilisation\"), React.createElement(\"input\", {\n      name: \"demobilisation\",\n      type: \"text\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Button, {\n      disabled: this.state.isLoading,\n      color: \"primary\",\n      onClick: () => {\n        this.AddMission();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, !this.state.isLoading && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \" Ajouter un Ordre\"), this.state.isLoading && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-circle-notch fa-spin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), \" Ajouter un expert\")), React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Annuler\"))));\n  }\n\n}\n\nexport default ModalE;","map":{"version":3,"sources":["C:/Users/Y A C I N E/Desktop/Falcon ress/src/Components/Mission.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","ModalFooter","axios","ModalE","Component","constructor","props","onChange","e","setState","target","name","value","AddMission","state","numOrdre","NomPrenom","Qualification","alert","isLoading","setTimeout","prevState","modal","post","dateDebut","dateFin","dureeVisite","qualificationExigees","lieuMission","client","codeclient","etendue","materiels","lieu","mobilisation","logement","demobilisation","isChooseclient","then","res","get","catch","err","classSelect","year","Date","getFullYear","bb","Max","length","options","document","getElementById","id","selectedIndex","in","Min","toggle","bind","componentDidMount","res1","data","getclient","render","className","map","x","y","clientCode","clientName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP,C,CAGA;;AACA,OAAO,aAAP;;AAGA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACnC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwEnBC,QAxEmB,GAwEPC,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAKH,KA9EoB;;AAAA,SA2GrBC,UA3GqB,GA2GR,MAAK;AAChB,UAAI,KAAKC,KAAL,CAAWC,QAAX,KAAsB,EAAtB,IAA0B,KAAKD,KAAL,CAAWE,SAAX,KAAuB,EAAjD,IAAqD,KAAKF,KAAL,CAAWG,aAAX,KAA2B,EAApF,EACAC,KAAK,CAAC,kCAAD,CAAL,CADA,KAEI;AACF,aAAKT,QAAL,CAAc;AAAEU,UAAAA,SAAS,EAAE;AAAb,SAAd;AACAC,QAAAA,UAAU,CAAC,MAAM;AACf,eAAKX,QAAL,CAAcY,SAAS,KAAK;AAC1BC,YAAAA,KAAK,EAAE,CAACD,SAAS,CAACC,KADQ;AAE1BH,YAAAA,SAAS,EAAE;AAFe,WAAL,CAAvB;AAID,SALS,EAKP,IALO,CAAV;AAOAjB,QAAAA,KAAK,CACFqB,IADH,CACQ,OADR,EACgB;AAAG;AACfR,UAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADT;AAERC,UAAAA,SAAS,EAAC,KAAKF,KAAL,CAAWE,SAFb;AAGRC,UAAAA,aAAa,EAAC,KAAKH,KAAL,CAAWG,aAHjB;AAIRO,UAAAA,SAAS,EAAC,KAAKV,KAAL,CAAWU,SAJb;AAKRC,UAAAA,OAAO,EAAC,KAAKX,KAAL,CAAWW,OALX;AAMRC,UAAAA,WAAW,EAAC,KAAKZ,KAAL,CAAWY,WANf;AAORC,UAAAA,oBAAoB,EAAC,KAAKb,KAAL,CAAWa,oBAPxB;AAQRC,UAAAA,WAAW,EAAC,KAAKd,KAAL,CAAWc,WARf;AASRC,UAAAA,MAAM,EAAC,KAAKf,KAAL,CAAWe,MATV;AAURC,UAAAA,UAAU,EAAC,KAAKhB,KAAL,CAAWgB,UAVd;AAWRC,UAAAA,OAAO,EAAC,KAAKjB,KAAL,CAAWiB,OAXX;AAYRC,UAAAA,SAAS,EAAC,KAAKlB,KAAL,CAAWkB,SAZb;AAaRC,UAAAA,IAAI,EAAC,KAAKnB,KAAL,CAAWmB,IAbR;AAcRC,UAAAA,YAAY,EAAC,KAAKpB,KAAL,CAAWoB,YAdhB;AAeRC,UAAAA,QAAQ,EAAC,KAAKrB,KAAL,CAAWqB,QAfZ;AAgBRC,UAAAA,cAAc,EAAC,KAAKtB,KAAL,CAAWsB,cAhBlB;AAiBRC,UAAAA,cAAc,EAAC,KAAKvB,KAAL,CAAWuB;AAjBlB,SADhB,EAsBGC,IAtBH,CAsBQC,GAAG,IAAIrC,KAAK,CAACsC,GAAN,CAAU,eAAV,CAtBf,CAwBE;AAxBF,UA0BGC,KA1BH,CA0BSC,GAAG,IAAIxB,KAAK,CAACwB,GAAD,CA1BrB;AA2BF;AAAE,KAlJiB;;AAAA,SAoJpBC,WApJoB,GAoJNnC,CAAC,IAAI;AAClB,UAAIoC,IAAI,GAAE,IAAIC,IAAJ,GAAWC,WAAX,EAAV;AACA,UAAIC,EAAE,GAAC,KAAKjC,KAAL,CAAWkC,GAAX,CAAeC,MAAf,GAAsB,CAA7B;AACA,UAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAd;AACF,UAAIC,EAAE,GAAEH,OAAO,CAACA,OAAO,CAACI,aAAT,CAAP,CAA+BD,EAAvC;AAGE,WAAK5C,QAAL,CAAc;AACZM,QAAAA,QAAQ,EAACsC,EAAE,GAAC,GAAH,GAAOT,IAAP,GAAY,GAAZ,GAAgBG;AADb,OAAd;AAGD,KA9JoB;;AAEjB,SAAKjC,KAAL,GAAa;AACXK,MAAAA,SAAS,EAAE,KADA;AACO;AAClBG,MAAAA,KAAK,EAAE,KAFI;AAGXP,MAAAA,QAAQ,EAAE,EAHC;AAITC,MAAAA,SAAS,EAAC,EAJD;AAKTC,MAAAA,aAAa,EAAC,EALL;AAMTO,MAAAA,SAAS,EAAC,EAND;AAOTC,MAAAA,OAAO,EAAC,EAPC;AAQTC,MAAAA,WAAW,EAAC,EARH;AASTC,MAAAA,oBAAoB,EAAC,EATZ;AAUTC,MAAAA,WAAW,EAAC,EAVH;AAWTC,MAAAA,MAAM,EAAC,EAXE;AAYTC,MAAAA,UAAU,EAAC,EAZF;AAaTC,MAAAA,OAAO,EAAC,EAbC;AAcTC,MAAAA,SAAS,EAAC,EAdD;AAeTC,MAAAA,IAAI,EAAC,EAfI;AAgBTC,MAAAA,YAAY,EAAC,EAhBJ;AAiBTC,MAAAA,QAAQ,EAAC,EAjBA;AAkBTC,MAAAA,cAAc,EAAC,EAlBN;AAmBTmB,MAAAA,EAAE,EAAC,GAnBM;AAoBTP,MAAAA,GAAG,EAAC,EApBK;AAqBTQ,MAAAA,GAAG,EAAC;AArBK,KAAb;AA8BA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd,CAhCiB,CAgCqB;AACvC,GAnCkC,CAsCnC;;;AACAD,EAAAA,MAAM,GAAG;AACP;AACA,SAAKhD,QAAL,CAAcY,SAAS,KAAK;AAC1BC,MAAAA,KAAK,EAAE,CAACD,SAAS,CAACC,KADQ;AAE1BP,MAAAA,QAAQ,EAAE,EAFgB;AAGtBC,MAAAA,SAAS,EAAC,EAHY;AAItBC,MAAAA,aAAa,EAAC,EAJQ;AAKtBO,MAAAA,SAAS,EAAC,EALY;AAMtBC,MAAAA,OAAO,EAAC,EANc;AAOtBC,MAAAA,WAAW,EAAC,EAPU;AAQtBC,MAAAA,oBAAoB,EAAC,EARC;AAStBC,MAAAA,WAAW,EAAC,EATU;AAUtBC,MAAAA,MAAM,EAAC,EAVe;AAWtBC,MAAAA,UAAU,EAAC,EAXW;AAYtBC,MAAAA,OAAO,EAAC,EAZc;AAatBC,MAAAA,SAAS,EAAC,EAbY;AActBC,MAAAA,IAAI,EAAC,EAdiB;AAetBC,MAAAA,YAAY,EAAC,EAfS;AAgBtBC,MAAAA,QAAQ,EAAC,EAhBa;AAiBtBC,MAAAA,cAAc,EAAC;AAjBO,KAAL,CAAvB;AA+BD,GAxEkC,CAyEnC;;;AASFuB,EAAAA,iBAAiB,GAAE;AACjBzD,IAAAA,KAAK,CAACsC,GAAN,CAAU,eAAV,EAA2BF,IAA3B,CAAgCsB,IAAI,IAAG,KAAKnD,QAAL,CAAc;AACnDuC,MAAAA,GAAG,EAACY,IAAI,CAACC;AAD0C,KAAd,CAAvC;AAGD;;AACDC,EAAAA,SAAS,GAAE;AACT5D,IAAAA,KAAK,CAACsC,GAAN,CAAU,UAAV,EAAsBF,IAAtB,CAA2BC,GAAG,IAAG,KAAK9B,QAAL,CAAc;AAC7C+C,MAAAA,GAAG,EAACjB,GAAG,CAACsB;AADqC,KAAd,CAAjC;AAGD,GA3FoC,CA6FrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAmEEE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAgC,MAAA,OAAO,EAAE,MAAM;AACnD,aAAKN,MAAL;AACQ,aAAKK,SAAL;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWQ,KAApC;AAA2C,MAAA,MAAM,EAAE,KAAKmC,MAAxD;AAAgE,MAAA,SAAS,EAAE,KAAKnD,KAAL,CAAW0D,SAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKP,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA,EAGR;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHQ,EAG4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAK3C,KAAL,CAAWC,QAAjB,CAH5C,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,EAKG;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALH,EAKsD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAsC,MAAA,QAAQ,EAAE,KAAKR,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALtD,EAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANH,EAM+B;AAAQ,MAAA,IAAI,EAAC,eAAb;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAA0C,MAAA,QAAQ,EAAE,KAAKA,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAN/B,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAPA,EAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARH,EAQ4B;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAsC,MAAA,QAAQ,EAAE,KAAKA,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAR5B,EASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATH,EAS0B;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAoC,MAAA,QAAQ,EAAE,KAAKA,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAT1B,EAUG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAVH,EAUoC;AAAQ,MAAA,IAAI,EAAC,aAAb;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAwC,MAAA,QAAQ,EAAE,KAAKA,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVpC,EAWG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAXH,EAWwC;AAAQ,MAAA,IAAI,EAAC,sBAAb;AAAmC,MAAA,IAAI,EAAC,MAAxC;AAAiD,MAAA,QAAQ,EAAE,KAAKA,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXxC,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZA,EAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbH,EAaoC;AAAQ,MAAA,IAAI,EAAC,aAAb;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAwC,MAAA,QAAQ,EAAE,KAAKA,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbpC,EAcG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdH,EAeG;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAQ,MAAA,EAAE,EAAC,UAAX;AAAqB,MAAA,QAAQ,EAAE,KAAKoC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAjD,EAAqG,KAAK7B,KAAL,CAAW0C,GAAX,CAAeS,GAAf,CAAmB,CAACC,CAAD,EAAGC,CAAH,KAExH;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,EAAE,EAAED,CAAC,CAACE,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCF,CAAC,CAACG,UAArC,CAFqG,CAArG,CAFA,CAfH,EAyBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAzBH,EAyByB;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAoC,MAAA,QAAQ,EAAE,KAAK9D,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBzB,EA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA1BA,EA2BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCA3BH,EA2BuC;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAsC,MAAA,QAAQ,EAAE,KAAKA,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BvC,EA4BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BH,EA4BsB;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAAiC,MAAA,QAAQ,EAAE,KAAKA,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BtB,EA6BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7BH,EA6B8B;AAAQ,MAAA,IAAI,EAAC,cAAb;AAA2B,MAAA,IAAI,EAAC,MAAhC;AAAyC,MAAA,QAAQ,EAAE,KAAKA,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7B9B,EA8BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9BH,EA8B0B;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAqC,MAAA,QAAQ,EAAE,KAAKA,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9B1B,EA+BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA/BH,EA+BgC;AAAQ,MAAA,IAAI,EAAC,gBAAb;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAA2C,MAAA,QAAQ,EAAE,KAAKA,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BhC,CAFF,CAFF,EA8CE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN,oBAAC,MAAD;AACM,MAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWK,SAD3B;AACsC,MAAA,KAAK,EAAC,SAD5C;AAEM,MAAA,OAAO,EAAE,MAAK;AAAC,aAAKN,UAAL;AAAoB,OAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIM,CAAC,KAAKC,KAAL,CAAWK,SAAZ,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJhC,EAKM,KAAKL,KAAL,CAAWK,SAAX,IAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM;AAAG,MAAA,KAAK,EAAC,6BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,uBAL/B,CADM,EASE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,KAAKsC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,CA9CF,CALF,CADF;AAkED;;AA9OkC;;AAiPrC,eAAetD,MAAf","sourcesContent":["import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport \"./ordreMission.css\"\r\n\r\n\r\n// modal class for adding new expert \r\nimport './modal.css'\r\n\r\n\r\nclass ModalE extends React.Component {\r\n  // initial state \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false, // variable pour l'animation du button \r\n      modal: false,\r\n      numOrdre: \"\",\r\n        NomPrenom:\"\",\r\n        Qualification:\"\",\r\n        dateDebut:\"\",\r\n        dateFin:\"\",\r\n        dureeVisite:\"\",\r\n        qualificationExigees:\"\",\r\n        lieuMission:\"\",\r\n        client:\"\",\r\n        codeclient:\"\",\r\n        etendue:\"\",\r\n        materiels:\"\",\r\n        lieu:\"\",\r\n        mobilisation:\"\",\r\n        logement:\"\",\r\n        demobilisation:\"\",\r\n        in:100,\r\n        Max:[],\r\n        Min:[]\r\n        \r\n\r\n    \r\n    \r\n   \r\n    \r\n    }\r\n\r\n    this.toggle = this.toggle.bind(this); // close modal after adding new expert\r\n  }\r\n\r\n\r\n  // toggle get state empty after adding an expert, close modal after add expert \r\n  toggle() {\r\n    // clear state \r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n      numOrdre: \"\",\r\n          NomPrenom:\"\",\r\n          Qualification:\"\",\r\n          dateDebut:\"\",\r\n          dateFin:\"\",\r\n          dureeVisite:\"\",\r\n          qualificationExigees:\"\",\r\n          lieuMission:\"\",\r\n          client:\"\",\r\n          codeclient:\"\",\r\n          etendue:\"\",\r\n          materiels:\"\",\r\n          lieu:\"\",\r\n          mobilisation:\"\",\r\n          logement:\"\",\r\n          demobilisation:\"\",\r\n        \r\n        \r\n          \r\n          \r\n          \r\n\r\n      \r\n      \r\n     \r\n      \r\n      \r\n      \r\n    }));\r\n  }\r\n  // onChange get value from input\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      \r\n    });\r\n    \r\n};\r\n\r\ncomponentDidMount(){\r\n  axios.get('/missionsList').then(res1=> this.setState({\r\n    Max:res1.data\r\n  }))\r\n}\r\ngetclient(){\r\n  axios.get('/clients').then(res=> this.setState({\r\n    Min:res.data\r\n  }))\r\n}\r\n\r\n// componentDidMount (){\r\n//     axios.all([\r\n//       axios.get('/missionsList'),\r\n//       axios.get('/clients')\r\n//     ])\r\n//     .then(axios.spread((misRes, clRes) => {\r\n//       this.setState({\r\n//         Max : misRes.data,\r\n//         Min: clRes.data // get data from database named FalconData and put all data in variable called profile\r\n//     })\r\n//     }))\r\n// }\r\n\r\n\r\n\r\n\r\nAddMission = () =>{\r\n  if (this.state.numOrdre===\"\"||this.state.NomPrenom===\"\"||this.state.Qualification===\"\")\r\n  alert(\"veuillez remplir tout les champs\");\r\n  else{\r\n    this.setState({ isLoading: true})\r\n    setTimeout(() => {\r\n      this.setState(prevState => ({\r\n        modal: !prevState.modal,\r\n        isLoading: false,\r\n      }));\r\n    }, 1200)\r\n\r\n    axios\r\n      .post(\"/addd\",{  // envoyer les données récupérées a la base de données au chemin /addd\r\n        numOrdre: this.state.numOrdre,\r\n            NomPrenom:this.state.NomPrenom,\r\n            Qualification:this.state.Qualification,\r\n            dateDebut:this.state.dateDebut,\r\n            dateFin:this.state.dateFin,\r\n            dureeVisite:this.state.dureeVisite,\r\n            qualificationExigees:this.state.qualificationExigees,\r\n            lieuMission:this.state.lieuMission,\r\n            client:this.state.client,\r\n            codeclient:this.state.codeclient,\r\n            etendue:this.state.etendue,\r\n            materiels:this.state.materiels,\r\n            lieu:this.state.lieu,\r\n            mobilisation:this.state.mobilisation,\r\n            logement:this.state.logement,\r\n            demobilisation:this.state.demobilisation,      \r\n            isChooseclient:this.state.isChooseclient,\r\n            \r\n            \r\n        })\r\n      .then(res => axios.get(\"/missionsList\"), \r\n      \r\n      //.then(res => this.props.updateExpertList(res.data))\r\n      )\r\n      .catch(err => alert(err));\r\n } }\r\n\r\n classSelect = e => {\r\n  var year= new Date().getFullYear();\r\n  var bb=this.state.Max.length+1;\r\n  var options = document.getElementById(\"mySelect\");\r\nvar id= options[options.selectedIndex].id;\r\n\r\n \r\n  this.setState({\r\n    numOrdre:id+\"-\"+year+\"-\"+bb\r\n  })\r\n};\r\n\r\n \r\n  \r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"homeButton\"  onClick={() => {\r\n    this.toggle();\r\n            this.getclient();\r\n          }}>Créer Ordre de Mission</button>\r\n        <Modal size='lg' isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader toggle={this.toggle}> Ordre de Mission</ModalHeader>\r\n          <ModalBody>\r\n            \r\n            <div className=\"ordreMission\">\r\n\r\n            <h2>Ordre de Mission</h2>\r\n    <label className=\"modalLabel\">Numero d'ordre</label><h1> {this.state.numOrdre}</h1>\r\n            <h2>Inspecteur</h2>\r\n               <label className=\"modalLabel\">Nom et Prenom</label><input  name=\"NomPrenom\"type=\"text\"   onChange={this.onChange}/>\r\n               <label>Qualification</label><input  name=\"Qualification\"type=\"text\"   onChange={this.onChange}/>\r\n            <h2>Détails de la mission</h2>\r\n               <label>Date Debut</label><input  name=\"dateDebut\"type=\"text\"   onChange={this.onChange}/>\r\n               <label>Date Fin</label><input  name=\"dateFin\"type=\"text\"   onChange={this.onChange}/>\r\n               <label>Durée de la visite</label><input  name=\"dureeVisite\"type=\"text\"   onChange={this.onChange}/>\r\n               <label>Qualifications Exigées</label><input  name=\"qualificationExigees\"type=\"text\"   onChange={this.onChange}/>\r\n            <h2>Détails du Projet</h2>\r\n               <label>Lieu de la mission</label><input  name=\"lieuMission\"type=\"text\"   onChange={this.onChange}/>\r\n               <label>Client</label>\r\n               <form name=\"form1\">\r\n                 \r\n               <select id=\"mySelect\"onChange={this.classSelect}><option hidden selected>Choisir un client </option>{this.state.Min.map((x,y) => \r\n               \r\n               <option key={y} id={x.clientCode}>{x.clientName}</option>)}</select>\r\n                 \r\n              \r\n                </form>\r\n               \r\n\r\n               <label>Etendue</label><input  name=\"etendue\"type=\"text\"   onChange={this.onChange}/>\r\n            <h2>Logistiques</h2>\r\n               <label>Materiels recommandés</label><input  name=\"materiels\"type=\"text\"   onChange={this.onChange}/>\r\n               <label>lieu</label><input  name=\"lieu\"type=\"text\"   onChange={this.onChange}/>\r\n               <label>Mobilisation</label><input  name=\"mobilisation\"type=\"text\"   onChange={this.onChange}/>\r\n               <label>logement</label><input  name=\"logement\"type=\"text\"   onChange={this.onChange}/>\r\n               <label>Démobilisation</label><input  name=\"demobilisation\"type=\"text\"   onChange={this.onChange}/>\r\n\r\n                \r\n            \r\n            \r\n            \r\n            </div>\r\n            \r\n         \r\n            \r\n          </ModalBody>\r\n          <ModalFooter>\r\n    <Button \r\n          disabled={this.state.isLoading} color=\"primary\" \r\n          onClick={()=> {this.AddMission(); }}\r\n          >\r\n        { !this.state.isLoading &&  <span> Ajouter un Ordre</span>}\r\n        { this.state.isLoading &&  <span><i class=\"fas fa-circle-notch fa-spin\"></i> Ajouter un expert</span>}\r\n    \r\n    </Button>\r\n            <Button color=\"secondary\" onClick={this.toggle}>Annuler</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalE;"]},"metadata":{},"sourceType":"module"}