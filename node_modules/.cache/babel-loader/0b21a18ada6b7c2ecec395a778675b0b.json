{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Y A C I N E\\\\Desktop\\\\Falcon ress\\\\src\\\\Components\\\\Clients.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nexport class Clients extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.addclient = () => {\n      const _this$state = this.state,\n            clientCode = _this$state.clientCode,\n            clientName = _this$state.clientName;\n      axios.post(\"/addClient\", {\n        clientName: clientName,\n        clientCode: clientCode\n      }).then(res => axios.get(\"/clients\") //.then(res => this.props.updateExpertList(res.data))\n      ).catch(err => alert(err));\n    };\n\n    this.state = {\n      clientCode: \"\",\n      clientName: \"\",\n      tab: [],\n      isLoading: false,\n      // variable pour l'animation du button \n      modal: false\n    };\n    this.toggle = this.toggle.bind(this); // close modal after adding new expert\n  }\n\n  toggle() {\n    // clear state \n    this.setState(prevState => ({\n      modal: !prevState.modal,\n      clientCode: \"\",\n      clientName: \"\",\n      tab: []\n    }));\n  }\n\n  componentDidMount() {\n    axios.get(\"/clients\").then(res => this.setState({\n      tab: res.data // get data from database named FalconData and put all data in variable called profile\n\n    })).catch(err => console.log(\"err\", err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }\n\n}\nexport default Clients;","map":{"version":3,"sources":["C:/Users/Y A C I N E/Desktop/Falcon ress/src/Components/Clients.js"],"names":["React","Component","axios","Button","Modal","ModalHeader","ModalBody","ModalFooter","Clients","constructor","props","onChange","e","setState","target","name","value","addclient","state","clientCode","clientName","post","then","res","get","catch","err","alert","tab","isLoading","modal","toggle","bind","prevState","componentDidMount","data","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;AAEA,OAAO,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AACnCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoBnBC,QApBmB,GAoBPC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGI,KAxBW;;AAAA,SAmCnBC,SAnCmB,GAmCP,MAAM;AAAA,0BACoB,KAAKC,KADzB;AAAA,YACNC,UADM,eACNA,UADM;AAAA,YACKC,UADL,eACKA,UADL;AAEdlB,MAAAA,KAAK,CACJmB,IADD,CACM,YADN,EACmB;AACfD,QAAAA,UAAU,EAACA,UADI;AAEfD,QAAAA,UAAU,EAACA;AAFI,OADnB,EAKCG,IALD,CAKMC,GAAG,IAAIrB,KAAK,CAACsB,GAAN,CAAU,UAAV,CALb,CAMF;AANE,QAQDC,KARC,CAQKC,GAAG,IAAIC,KAAK,CAACD,GAAD,CARjB;AASH,KA9CkB;;AAGf,SAAKR,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAC,EADF;AAETC,MAAAA,UAAU,EAAC,EAFF;AAGRQ,MAAAA,GAAG,EAAC,EAHI;AAIRC,MAAAA,SAAS,EAAE,KAJH;AAIU;AAClBC,MAAAA,KAAK,EAAE;AALC,KAAb;AAOA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd,CAVe,CAUuB;AACzC;;AACDD,EAAAA,MAAM,GAAG;AACL;AACA,SAAKlB,QAAL,CAAcoB,SAAS,KAAK;AAC1BH,MAAAA,KAAK,EAAE,CAACG,SAAS,CAACH,KADQ;AAE1BX,MAAAA,UAAU,EAAC,EAFe;AAGxBC,MAAAA,UAAU,EAAC,EAHa;AAIvBQ,MAAAA,GAAG,EAAC;AAJmB,KAAL,CAAvB;AAKI;;AAOJM,EAAAA,iBAAiB,GAAG;AAEhBhC,IAAAA,KAAK,CACFsB,GADH,CACO,UADP,EAEGF,IAFH,CAEQC,GAAG,IAAI,KAAKV,QAAL,CAAc;AACvBe,MAAAA,GAAG,EAAGL,GAAG,CAACY,IADa,CACP;;AADO,KAAd,CAFf,EAKGV,KALH,CAKSC,GAAG,IAAGU,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBX,GAAnB,CALf;AAMD;;AAcPY,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAzDkC;AA4DvC,eAAe9B,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nexport class Clients extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            clientCode:\"\",\r\n            clientName:\"\",\r\n             tab:[],\r\n             isLoading: false, // variable pour l'animation du button \r\n             modal: false,\r\n        }\r\n        this.toggle = this.toggle.bind(this); // close modal after adding new expert\r\n    }\r\n    toggle() {\r\n        // clear state \r\n        this.setState(prevState => ({\r\n          modal: !prevState.modal,\r\n          clientCode:\"\",\r\n            clientName:\"\",\r\n             tab:[],\r\n        }))}\r\n    onChange = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value,\r\n          \r\n        });}\r\n\r\n        componentDidMount (){\r\n\r\n            axios\r\n              .get(\"/clients\")\r\n              .then(res => this.setState({\r\n                  tab : res.data  // get data from database named FalconData and put all data in variable called profile\r\n              }))\r\n              .catch(err =>console.log(\"err\", err))\r\n          }\r\n    addclient = () => {\r\n        const { clientCode,clientName } = this.state;\r\n        axios\r\n        .post(\"/addClient\",{\r\n            clientName:clientName,\r\n            clientCode:clientCode,\r\n        })\r\n        .then(res => axios.get(\"/clients\") \r\n      //.then(res => this.props.updateExpertList(res.data))\r\n      )\r\n      .catch(err => alert(err));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <label>nom</label><input type=\"text\" name=\"clientName\" onChange={this.onChange}></input>\r\n                <label>code</label><input type=\"text\" name=\"clientCode\" onChange={this.onChange}></input>\r\n                <button onClick={this.addclient}>add</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clients\r\n\r\n"]},"metadata":{},"sourceType":"module"}