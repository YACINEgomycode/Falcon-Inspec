{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Y A C I N E\\\\Desktop\\\\Falcon ress\\\\src\\\\Components\\\\connectJWT.js\";\nimport React, { Component } from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { Redirect, Link } from 'react-router-dom';\nexport default class connectJWT extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.login = () => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password;\n      axios.post(\"http://localhost:5000/login\", {\n        username,\n        password\n      }).then(res => {\n        console.log(res.data.user);\n        localStorage.setItem(\"token\", res.data.token); // this.props.history.push('/users')\n      }).catch(err => alert(\"please check your informations\"));\n    };\n\n    this.configtoken = () => {\n      const token = localStorage.getItem(\"token\");\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n\n      if (token) {\n        config.headers[\"Authorization\"] = token;\n      } // const config = { headers: { common: { Authorization: token } } };\n\n\n      return config;\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.configtoken());\n    axios.get(\"http://localhost:5000/current\", this.configtoken()).then(res => console.log(res.data)).catch(err => console.log(err.response.data));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: this.handleChange,\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      onChange: this.handleChange,\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      style: {\n        margin: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"login\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Y A C I N E/Desktop/Falcon ress/src/Components/connectJWT.js"],"names":["React","Component","Navbar","axios","Redirect","Link","connectJWT","constructor","props","handleChange","e","setState","target","name","value","login","state","username","password","post","then","res","console","log","data","user","localStorage","setItem","token","catch","err","alert","configtoken","getItem","config","headers","componentDidMount","get","response","render","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Navbar } from 'react-bootstrap'\r\nimport axios from \"axios\";\r\nimport {Redirect, Link} from 'react-router-dom'\r\n\r\nexport default class connectJWT extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             username :\"\",\r\n             password :\"\"\r\n        }\r\n    }\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      };\r\n\r\n    login = () => {\r\n        const { username, password } = this.state;\r\n        axios\r\n          .post(\"http://localhost:5000/login\", { username, password })\r\n          .then(res => {\r\n            console.log(res.data.user);\r\n            localStorage.setItem(\"token\", res.data.token);\r\n            \r\n            \r\n            // this.props.history.push('/users')\r\n          })\r\n          .catch(err => alert(\"please check your informations\"));\r\n      };\r\n    \r\n      configtoken = () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\"\r\n          }\r\n        };\r\n        \r\n     \r\n    \r\n        if (token) {\r\n          config.headers[\"Authorization\"] = token;\r\n        }\r\n        // const config = { headers: { common: { Authorization: token } } };\r\n        return config;\r\n      };\r\n      componentDidMount() {\r\n        \r\n        console.log(this.configtoken());\r\n        axios\r\n          .get(\"http://localhost:5000/current\", this.configtoken())\r\n          .then(res =>  console.log(res.data))\r\n          .catch(err => console.log(err.response.data));\r\n      }\r\n\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Navbar/>\r\n                </div>\r\n                <div>\r\n                <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"username\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"password\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"password\"\r\n          />\r\n           <Link  to='/'> \r\n                      <Button color=\"secondary\" style={{margin:'10px'}}>login</Button> \r\n                    </Link>\r\n        </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}